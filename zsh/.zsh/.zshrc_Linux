alias open='xdg-open'

# clipboard
if type xclip > /dev/null 2>&1; then
  alias pbcopy='xclip -selection clipboard -in'
  alias pbpaste='xclip -selection clipboard -out'
elif type xsel > /dev/null 2>&1; then
  alias pbcopy='xsel --clipboard --input'
  alias pbpaste='xsel --clipboard --output'
fi

# ROS setting
if [ -d "/opt/ros" ]; then
  rossetiot() {
    export ROS_MASTER_URI=http://192.168.250.10:11311
    export ROS_IP=`hostname -I`
    export ROS_HOSTNAME=$ROS_IP
  }

  rossetreset() {
    export ROS_MASTER_URI=http://localhost:11311
    export ROS_IP=`hostname -I`
    export ROS_HOSTNAME=$ROS_IP
  }

  rostop() {
    cd ~/catkin_ws/src
  }

  if [ -d "/opt/ros/melodic" ]; then
    source /opt/ros/melodic/setup.zsh
  elif [ -d "/opt/ros/noetic" ]; then
    source /opt/ros/noetic/setup.zsh
  elif [ -d "/opt/ros/foxy" ]; then
    source /opt/ros/foxy/setup.zsh
  fi

  if [ -d "$HOME/catkin_ws" ]; then
    source ~/catkin_ws/devel/setup.zsh
  fi
fi

# linuxbrew
if [ -d "/home/linuxbrew/.linuxbrew" ]; then
  eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
fi

# pyenv setting
if [ -d "$HOME/.pyenv" ]; then
  export PATH="$HOME/.pyenv/bin:$PATH"
  eval "$(pyenv init -)"
fi
if [ -d "$HOME/.pyenv/plugins/pyenv-virtualenv" ]; then
  eval "$(pyenv virtualenv-init -)"
fi

# peco setting
if [ -e "/usr/local/bin/peco" ]; then
	function peco-select-history() {
		BUFFER=$(\history -n 1 | tac | peco)
		CURSOR=$#BUFFER
		zle clear-screen
	}
	zle -N peco-select-history
	bindkey '^r' peco-select-history
fi

# cuda
if [ -d "/usr/local/cuda-10.0" ]; then
  export PATH=$PATH:/usr/local/cuda-10.0/bin
fi

# for lubuntu
if [ -e "$HOME/.config/openbox/lxde-rc.xml" ]; then
  export LXDE_RC_PATH="$HOME/.config/openbox/lxde-rc.xml"
  alias vilxde-rc="vim $LXDE_RC_PATH"
fi

# Python user path
export PATH=$PATH:$HOME/.local/bin

# support command_not_found
. /etc/zsh_command_not_found
